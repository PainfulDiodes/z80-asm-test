# file opened: succeed.asm
 1    0000                  output _succeed.bin
 2    0000
 3    0000                  MACRO PADORG addr
 4    0000 ~                     IF $ < addr
 5    0000 ~                     BLOCK addr-$
 6    0000 ~                     ENDIF
 7    0000 ~                     ORG addr
 8    0000                  ENDM
 9    0000
10    0000              SIMPLEPAD: MACRO addr ; macroname MACRO param format is supported (label must be at beginning of line)
11    0000 ~                    BLOCK addr-$
12    0000                  ENDM
13    0000
14    0000 C3 00 01         jp START
15    0003
16    0003                  PADORG $100     ; BLOCK is needed to pad out memory (ALIGN might also be used)
16    0003             >         IF $ < $100
16    0003 00 00 00... >         BLOCK $100-$
16    0100             >         ENDIF
16    0100             >         ORG $100
17    0100
18    0100              START:
19    0100 50 59            ld de,bc        ; successfully translates to ld d,b followed by ld e,c [50,59]
20    0102 C3 00 04         jp END
21    0105
22    0105 01               db high($)      ; high byte of the current PC
23    0106 06               db low($)       ; low byte of the current PC
24    0107
25    0107 00 00 00...      align $100      ; pad to beginning of next memory page
26    0200
27    0200 66 6F 6F 0A      db "foo\n",0      ; c-style strings using DB, escaped control characters allowed
27    0204 00
28    0205
29    0205 00 00 00...      align $100      ; pad to beginning of next memory page
30    0300
31    0300                  .include included.asm       ; directives can start with a . (or not)
# file opened: included.asm
 1+   0300 62 61 72 00      DB "bar",0
# file closed: included.asm
32    0304
33    0304                  SIMPLEPAD $400     ; BLOCK is needed to pad out memory
33    0304 00 00 00... >        BLOCK $400-$
34    0400
35    0400              END:
36    0400 76               halt
# file closed: succeed.asm
